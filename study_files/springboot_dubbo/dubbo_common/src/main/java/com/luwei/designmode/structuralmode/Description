结构型模式：适配器模式、装饰模式、代理模式、外观模式、桥接模式、组合模式、享元模式。
 1、适配器模式将某个类的接口转换成客户端期望的另一个接口表示，
    目的是消除由于接口不匹配所造成的类的兼容性问题。主要分为三类：类的适配器模式、对象的适配器模式、接口的适配器模式。
 2、装饰模式:
    顾名思义，装饰模式就是给一个对象增加一些新的功能，而且是动态的，要求装饰对象和被装饰对象实现同一个接口，装饰对象持有被装饰对象的实例
 3、代理模式：每个模式名称就表明了该模式的作用，代理模式就是多一个代理类出来，替原对象进行一些操作
    代理模式的应用场景：
    如果已有的方法在使用的时候需要对原有的方法进行改进，此时有两种办法：
    1、修改原有的方法来适应。这样违反了“对扩展开放，对修改关闭”的原则。
    2、就是采用一个代理类调用原有的方法，且对产生的结果进行控制。这种方法就是代理模式。
    使用代理模式，可以将功能划分的更加清晰，有助于后期维护！